class FloatMessage extends Message
{
  property float payload = 0.0

  override Str getPayload() { return Sys.floatStr(payload) }

  override bool updateData(Obj handle) 
  {
    bool result = super.updateData(handle)
    if (!result)
      return result

    payload := parseFloat()
    return result
  }
  
  private float parseFloat()
  {
    int i = 0
    bool neg = false

    if (strBuf.get(i) == '-')
    {
        neg = true
        i++
    }
    if (strBuf.get(i) == 0) return null

    int len = strBuf.length()
    float fractionFactor = null
    float val = 0f
    for(; i<len; ++i)
    {
        int c
        c = strBuf.get(i);
        if (c == '.') fractionFactor = 0.1
        else if (c < '0' || c > '9') return null
        else {
            if (fractionFactor == null)
            {
                val = (val*10f) + (float)(c-'0')
            }
            else
            {
                val = val + ((float)(c-'0'))*fractionFactor
                fractionFactor = fractionFactor * 0.1
            }
        }
    }
    
    if (neg) val = -val
    return val
  }
}
